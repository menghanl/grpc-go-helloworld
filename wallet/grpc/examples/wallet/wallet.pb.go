// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpc/examples/wallet/wallet.proto

package wallet

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BalancePerAddress struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Balance              int64    `protobuf:"varint,2,opt,name=balance,proto3" json:"balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BalancePerAddress) Reset()         { *m = BalancePerAddress{} }
func (m *BalancePerAddress) String() string { return proto.CompactTextString(m) }
func (*BalancePerAddress) ProtoMessage()    {}
func (*BalancePerAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_0842a1ecb0ac8772, []int{0}
}

func (m *BalancePerAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BalancePerAddress.Unmarshal(m, b)
}
func (m *BalancePerAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BalancePerAddress.Marshal(b, m, deterministic)
}
func (m *BalancePerAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BalancePerAddress.Merge(m, src)
}
func (m *BalancePerAddress) XXX_Size() int {
	return xxx_messageInfo_BalancePerAddress.Size(m)
}
func (m *BalancePerAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_BalancePerAddress.DiscardUnknown(m)
}

var xxx_messageInfo_BalancePerAddress proto.InternalMessageInfo

func (m *BalancePerAddress) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *BalancePerAddress) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

type BalanceRequest struct {
	IncludeBalancePerAddress bool     `protobuf:"varint,1,opt,name=include_balance_per_address,json=includeBalancePerAddress,proto3" json:"include_balance_per_address,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *BalanceRequest) Reset()         { *m = BalanceRequest{} }
func (m *BalanceRequest) String() string { return proto.CompactTextString(m) }
func (*BalanceRequest) ProtoMessage()    {}
func (*BalanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0842a1ecb0ac8772, []int{1}
}

func (m *BalanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BalanceRequest.Unmarshal(m, b)
}
func (m *BalanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BalanceRequest.Marshal(b, m, deterministic)
}
func (m *BalanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BalanceRequest.Merge(m, src)
}
func (m *BalanceRequest) XXX_Size() int {
	return xxx_messageInfo_BalanceRequest.Size(m)
}
func (m *BalanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BalanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BalanceRequest proto.InternalMessageInfo

func (m *BalanceRequest) GetIncludeBalancePerAddress() bool {
	if m != nil {
		return m.IncludeBalancePerAddress
	}
	return false
}

type BalanceResponse struct {
	Balance              int64                `protobuf:"varint,1,opt,name=balance,proto3" json:"balance,omitempty"`
	Addresses            []*BalancePerAddress `protobuf:"bytes,2,rep,name=addresses,proto3" json:"addresses,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *BalanceResponse) Reset()         { *m = BalanceResponse{} }
func (m *BalanceResponse) String() string { return proto.CompactTextString(m) }
func (*BalanceResponse) ProtoMessage()    {}
func (*BalanceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0842a1ecb0ac8772, []int{2}
}

func (m *BalanceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BalanceResponse.Unmarshal(m, b)
}
func (m *BalanceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BalanceResponse.Marshal(b, m, deterministic)
}
func (m *BalanceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BalanceResponse.Merge(m, src)
}
func (m *BalanceResponse) XXX_Size() int {
	return xxx_messageInfo_BalanceResponse.Size(m)
}
func (m *BalanceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BalanceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BalanceResponse proto.InternalMessageInfo

func (m *BalanceResponse) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *BalanceResponse) GetAddresses() []*BalancePerAddress {
	if m != nil {
		return m.Addresses
	}
	return nil
}

func init() {
	proto.RegisterType((*BalancePerAddress)(nil), "grpc.examples.wallet.BalancePerAddress")
	proto.RegisterType((*BalanceRequest)(nil), "grpc.examples.wallet.BalanceRequest")
	proto.RegisterType((*BalanceResponse)(nil), "grpc.examples.wallet.BalanceResponse")
}

func init() { proto.RegisterFile("grpc/examples/wallet/wallet.proto", fileDescriptor_0842a1ecb0ac8772) }

var fileDescriptor_0842a1ecb0ac8772 = []byte{
	// 281 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x92, 0x41, 0x4b, 0xc3, 0x30,
	0x14, 0xc7, 0xcd, 0x06, 0xd3, 0x3d, 0x87, 0x62, 0xf0, 0x10, 0xf4, 0x52, 0x8b, 0x62, 0x2f, 0xa6,
	0x32, 0x0f, 0xe2, 0xc1, 0x83, 0x03, 0xf5, 0xa8, 0xe4, 0x32, 0x10, 0xa4, 0x64, 0xed, 0x23, 0x0a,
	0xb1, 0x89, 0x49, 0x87, 0x7e, 0x44, 0x3f, 0x96, 0xb4, 0x4d, 0x75, 0xb2, 0xa1, 0x27, 0x2f, 0x6d,
	0x1e, 0xef, 0x97, 0xdf, 0xcb, 0x83, 0x3f, 0x1c, 0x28, 0x67, 0xf3, 0x14, 0xdf, 0xe5, 0x8b, 0xd5,
	0xe8, 0xd3, 0x37, 0xa9, 0x35, 0x56, 0xe1, 0xc7, 0xad, 0x33, 0x95, 0xa1, 0xbb, 0x35, 0xc2, 0x3b,
	0x84, 0xb7, 0xbd, 0xf8, 0x16, 0x76, 0x26, 0x52, 0xcb, 0x32, 0xc7, 0x7b, 0x74, 0x57, 0x45, 0xe1,
	0xd0, 0x7b, 0xca, 0x60, 0x5d, 0xb6, 0x47, 0x46, 0x22, 0x92, 0x0c, 0x45, 0x57, 0xd6, 0x9d, 0x59,
	0x8b, 0xb3, 0x5e, 0x44, 0x92, 0xbe, 0xe8, 0xca, 0xf8, 0x0e, 0xb6, 0x82, 0x48, 0xe0, 0xeb, 0x1c,
	0x7d, 0x45, 0x2f, 0x61, 0xff, 0xb9, 0xcc, 0xf5, 0xbc, 0xc0, 0x2c, 0x40, 0x99, 0x45, 0x97, 0x2d,
	0x9a, 0x37, 0x04, 0x0b, 0xc8, 0xd2, 0x23, 0x62, 0x07, 0xdb, 0x5f, 0x42, 0x6f, 0x4d, 0xe9, 0x71,
	0x71, 0x3a, 0xf9, 0x31, 0x9d, 0x5e, 0xc3, 0x30, 0x78, 0xd1, 0xb3, 0x5e, 0xd4, 0x4f, 0x36, 0xc7,
	0xc7, 0x7c, 0xd5, 0xc2, 0x7c, 0x69, 0x90, 0xf8, 0xbe, 0x39, 0xfe, 0x20, 0x30, 0x98, 0x36, 0x1c,
	0x7d, 0x84, 0xd1, 0x0d, 0x56, 0xf9, 0x53, 0xe0, 0xe9, 0xe1, 0xaf, 0xba, 0xb0, 0xf3, 0xde, 0xd1,
	0x1f, 0x54, 0xbb, 0x48, 0xbc, 0x46, 0x33, 0x18, 0x4d, 0xe5, 0xbf, 0xe9, 0x4f, 0xc9, 0xe4, 0xe2,
	0xe1, 0x5c, 0x19, 0xa3, 0x34, 0x72, 0x65, 0xb4, 0x2c, 0x15, 0x37, 0x4e, 0xa5, 0x4d, 0x4a, 0xea,
	0xcf, 0x49, 0x48, 0xc8, 0xaa, 0xd8, 0xcc, 0x06, 0x4d, 0x60, 0xce, 0x3e, 0x03, 0x00, 0x00, 0xff,
	0xff, 0xe4, 0x34, 0xc3, 0x96, 0x55, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// WalletClient is the client API for Wallet service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WalletClient interface {
	// Unary RPC to fetch balancer of the account.
	FetchBalance(ctx context.Context, in *BalanceRequest, opts ...grpc.CallOption) (*BalanceResponse, error)
	// Server streaming RPC to watch the balance of the account.
	WatchBalance(ctx context.Context, in *BalanceRequest, opts ...grpc.CallOption) (Wallet_WatchBalanceClient, error)
}

type walletClient struct {
	cc grpc.ClientConnInterface
}

func NewWalletClient(cc grpc.ClientConnInterface) WalletClient {
	return &walletClient{cc}
}

func (c *walletClient) FetchBalance(ctx context.Context, in *BalanceRequest, opts ...grpc.CallOption) (*BalanceResponse, error) {
	out := new(BalanceResponse)
	err := c.cc.Invoke(ctx, "/grpc.examples.wallet.Wallet/FetchBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletClient) WatchBalance(ctx context.Context, in *BalanceRequest, opts ...grpc.CallOption) (Wallet_WatchBalanceClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Wallet_serviceDesc.Streams[0], "/grpc.examples.wallet.Wallet/WatchBalance", opts...)
	if err != nil {
		return nil, err
	}
	x := &walletWatchBalanceClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Wallet_WatchBalanceClient interface {
	Recv() (*BalanceResponse, error)
	grpc.ClientStream
}

type walletWatchBalanceClient struct {
	grpc.ClientStream
}

func (x *walletWatchBalanceClient) Recv() (*BalanceResponse, error) {
	m := new(BalanceResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// WalletServer is the server API for Wallet service.
type WalletServer interface {
	// Unary RPC to fetch balancer of the account.
	FetchBalance(context.Context, *BalanceRequest) (*BalanceResponse, error)
	// Server streaming RPC to watch the balance of the account.
	WatchBalance(*BalanceRequest, Wallet_WatchBalanceServer) error
}

// UnimplementedWalletServer can be embedded to have forward compatible implementations.
type UnimplementedWalletServer struct {
}

func (*UnimplementedWalletServer) FetchBalance(ctx context.Context, req *BalanceRequest) (*BalanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchBalance not implemented")
}
func (*UnimplementedWalletServer) WatchBalance(req *BalanceRequest, srv Wallet_WatchBalanceServer) error {
	return status.Errorf(codes.Unimplemented, "method WatchBalance not implemented")
}

func RegisterWalletServer(s *grpc.Server, srv WalletServer) {
	s.RegisterService(&_Wallet_serviceDesc, srv)
}

func _Wallet_FetchBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServer).FetchBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.examples.wallet.Wallet/FetchBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServer).FetchBalance(ctx, req.(*BalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Wallet_WatchBalance_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(BalanceRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(WalletServer).WatchBalance(m, &walletWatchBalanceServer{stream})
}

type Wallet_WatchBalanceServer interface {
	Send(*BalanceResponse) error
	grpc.ServerStream
}

type walletWatchBalanceServer struct {
	grpc.ServerStream
}

func (x *walletWatchBalanceServer) Send(m *BalanceResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _Wallet_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.examples.wallet.Wallet",
	HandlerType: (*WalletServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FetchBalance",
			Handler:    _Wallet_FetchBalance_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "WatchBalance",
			Handler:       _Wallet_WatchBalance_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "grpc/examples/wallet/wallet.proto",
}
